<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lypee.dao.UserDao" >
    <resultMap id="BaseResultMap" type="com.lypee.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="expiration_time" jdbcType="VARCHAR" property="expirationTime"/>
        <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="is_active" jdbcType="INTEGER" property="isActive"/>
        <result column="active_number" jdbcType="INTEGER" property="active_number"/>
        <!--<result column="activation_code_time" jdbcType="VARCHAR" property="activationCodeTime"/>-->
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.creteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${creterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>

                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="BaseColumnList">
        id ,`name` , email ,`password` , age ,sex ,remark ,
        register_time ,expiration_time ,leave_time ,last_login_time  ,active_number
    </sql>
    <!--新增-->
    <insert id="insert" parameterType="com.lypee.model.User"
            useGeneratedKeys="true" keyProperty="id">
        insert into `user` (id ,`name` ,email ,password ,age ,sex ,remark , registerTime, expiration_time)
        values
        (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
         #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
         #{registerTime,jdbcType=TIMESTAMP} ,#{expirationTime,jdbcType=VARCHAR}
         )
    </insert>

    <select id="findUserByUserName" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select * from `user` where name=#{name,jdbcType=VARCHAR}
    </select>

    <select id="findUserByEmail" resultMap="BaseResultMap"
            parameterType="java.util.HashMap">
        select * from `user` where email=#{email}
    </select>
    <update id="update" parameterType="com.lypee.model.User">
        update `user`
        <set>
            <if test="name ! null">`name` =#{name,jdbcType=VARCHAR},</if>
            <if test="email!=null">email =#{emaul,jdbcType=VARCHAR},</if>
            <if test="password!=null">password=#{password,jdbcType=VARCHAR},</if>
            <if test="age!= null">age=#{age,jdbcType=INTEGER},</if>
            <if test="sex != null" >sex = #{sex,jdbcType=VARCHAR},</if>
            <if test="remark != null" >remark = #{remark,jdbcType=VARCHAR},</if>
            <if test="registerTime != null" >register_time = #{registerTime,jdbcType=TIMESTAMP},</if>
            <if test="lastLoginTime != null" >last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},</if>
            <if test="active_number != null" >active_number = #{active_number,jdbcType=CHAR},</if>
            <if test="isActive != null" >is_active = #{isActive,jdbcType=INTEGER},</if>
            <!--<if test="activationCodeTime != null" >activation_code_time = #{activationCodeTime,jdbcType=INTEGER},</if>-->
        </set>
          where id=#{id}

    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lypee.model.User">
        update `user`
        <set>
            <if test="name!=null">`name` = #{name,jdbcType=VARCHAR},</if>
            <if test="email != null">email = #{email ,jdbcType=VARCHAR},</if>
            <if test="password != null" >password = #{password , jdbcType=VARCHAR},</if>
            <if test="age != null" >age = #{age,jdbcType=INTEGER},</if>
            <if test="sex != null" >sex = #{sex,jdbcType=VARCHAR},</if>
            <if test="remark != null" >remark = #{remark,jdbcType=VARCHAR},</if>
            <if test="registerTime != null" >register_time = #{registerTime,jdbcType=TIMESTAMP},</if>
            <if test="expirationTime != null">expiration_time = #{expirationTime,jdbcType=VARCHAR},</if>
            <if test="leaveTime != null ">leave_time = #{leaveTime ,jdbcType=TIMESTAMP},</if>
            <if test="lastLoginTime != null" >last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},</if>
            <if test="active_number != null" >active_number = #{active_number,jdbcType=CHAR},</if>
            <if test="isActive != null" >is_active = #{isActive,jdbcType=INTEGER},</if>
            <!--<if test="activationCodeTime != null" >activation_code_time = #{activationCodeTime,jdbcType=INTEGER},</if>-->
        </set>
        where id= #{id ,jdbcType=INTEGER}
    </update>
    <select id="findAll" resultMap="BaseResultMap">
        select * from `user`
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from `user` where id=#{id}
    </delete>
    <select id="findById" parameterType="java.lang.Integer">
        select * from `user` where id=#{id}
    </select>
    <!--获得该用户活跃的次数 并自增1-->
    <select id="getActiveNum" resultType="java.lang.Integer" parameterType="com.lypee.model.User">
        select active_number from `user` where id=#{id}
    </select>
    <update id="logOutById" parameterType="java.lang.Integer">
        update `user` set is_active = 0 where id=#{id}
    </update>

</mapper>